@startuml 2022 URI Laser Scarecrow State Model
'plantUML https://plantuml.com/
'in Visual Studio, look for the PlantUML extension by jebbs

state read_tape_setting <<choice>>
read_tape_setting : Jumper Mode
read_tape_setting --> Active : [ignore tape]
read_tape_setting --> MapSeekHome : [use tape]
read_tape_setting --> SelfTest : [self-test]

[*] --> PowerOn

state PowerOn 
PowerOn : /entry: initialize GPIO; read tape mode jumper
PowerOn --> read_tape_setting

state SelfTest {
  [*] --> HoldServo
  HoldServo : /entry: set servo to midpoint; set 5 second timer; beep welcome (?)
  HoldServo --> SelfTestActive : [timer elapsed]
  SelfTestActive --> SelfTestTilt : LSEVT_TILTED_PAST_THRESHOLD
  SelfTestActive : /do:\n* pulse laser;\n* move forward 2 reverse 1\n* servo sweep\n* click on magnet\n* beep on tape transition
  SelfTestTilt --> SelfTestActive : LSEVT_TILTED_OKAY
  SelfTestTilt : /entry: stop movement
  SelfTestTilt : /do: tilt error code beep frequently
  note as NoteSelfTest
  SelfTest can be exited
  only by powering down
  and setting tape mode jumper
  end note
}

state PreLaserWarningActive
PreLaserWarningActive : /do: rotate full speed; make annoying sounds
PreLaserWarningActive --> Active : LSEVT_BUZZER_WARNING_COMPLETE

state Active {
  Active : isn't quite right 
  [*] -->  Running
  Running : /do: random movement; laser per map
  Running --> ActiveSeekHome : LSEVT_HOME_EXPIRED  
 ActiveSeekHome --> Running : LSEVT_HOME_COMPLETED
 ActiveSeekHome --> HomeError : LSEVT_HOME_FAILED
 ActiveSeekHome : /do: forward other events to SeekHome
}

Active : /entry: laser OFF; read settings
Active --> Sleep : LSEVT_LIGHT_NIGHT
Active --> Manual : LSEVT_CONTROLS_ENABLE
Manual --> Active : LSEVT_CONTROLS_DISABLE

state SeekHome {
  [*] --> RotateToMagnet
  RotateToMagnet --> SeekHomeFailed : LSEVT_STEPPER_FINISHED_MOVE
  RotateToMagnet --> BackUpPastMagnet : LSEVT_MAGNET_ENTER
  RotateToMagnet : /entry stepper forward 2 revolutions
  RotateToMagnet : /exit stepper stop
  BackUpPastMagnet --> SlowSeekToMagnet : LSEVT_MAGNET_LEAVE
  BackUpPastMagnet : /entry tries := 25
  BackUpPastMagnet : /do stepper reverse (revolution / 50); tries--
  BackUpPastMagnet --> BackUpPastMagnet : LSEVT_STEPPER_FINISHED_MOVE\n[tries > 0]
  BackUpPastMagnet --> SeekHomeFailed : LSEVT_STEPPER_FINISHED_MOVE\n[tries <= 0]
  SlowSeekToMagnet : /entry: tries := 50
  SlowSeekToMagnet : /do: stepper forward 1; tries--
  SlowSeekToMagnet --> SlowSeekToMagnet : LSEVT_STEPPER_FINISHED_MOVE\[tries > 0]
  SlowSeekToMagnet --> SeekHomeFailed : LSEVT_STEPPER_FINISHED_MOVE\n[tries <= 0]
  SlowSeekToMagnet --> SeekHomeComplete : LSEVT_MAGNET_ENTER
  SeekHomeComplete : /entry: queue LSEVT_HOME_COMPLETED
  SeekHomeComplete --> [*]
  SeekHomeFailed : /entry: queue LSEVT_HOME_FAILED
  SeekHomeFailed --> HomeError
}
SeekHome : /entry: laser OFF
SeekHome : /exit: record home location (stepper_step := 0)

state HomeError
HomeError : /entry: turn off devices
HomeError : /do: home error code beeps periodically
HomeError : /exit: queue LSEVT_HOME_COMPLETED


state MapBuild {
  [*] --> SeekHome
  SeekHome --> BuildMap : [HomedSuccessfully]
  BuildMap : /entry: read tape mode; set map_optional and thresholds; enable reflectance sensor
  BuildMap : /do: step stepper and read tape reflectance levels for one rotation
  BuildMap : /exit: disable reflectance sensor; check map - map_built := tape sections detected AND bucket sections detected
  BuildMap --> BuildMapError : [!map_built && !map_optional]
  BuildMap --> PreLaserWarningActive : [map_built || map_optional)]
  BuildMapError : /entry: turn off devices
  BuildMapError : /do: tape error code beeps periodically
}

MapSeekHome --> MapBuild : LSEVT_HOME_COMPLETED
MapSeekHome --> HomeError : LSEVT_HOME_FAILED
MapSeekHome : /do: forward other events to SeekHome


state Sleep
Sleep : /entry: turn off all devices
Sleep : /do: check ambient light; check manual control; snore?
Sleep --> PreLaserWarningActive : LSEVT_LIGHT_DAY
Sleep --> Manual : LSEVT_CONTROLS_ENABLE

Manual : /entry: save settings
Manual : /exit: save settings

@enduml
